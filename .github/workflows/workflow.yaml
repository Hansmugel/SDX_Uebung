name: Continuous Integration and Testing

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: 'ghcr.io/hansmugel/sdx_uebung:latest'
  IMAGE_TAG: latest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main



jobs:
  lint:
    name: Lint Go
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54
          working-directory: src

  build:
    needs: lint
    name: Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          tags: 'ghcr.io/hansmugel/sdx_uebung:latest'
          load: true
          push: true

  scan:
    needs: build
    name: Scan Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Pull Image for Scanning
      run: docker pull ghcr.io/hansmugel/sdx_uebung:latest

    - name: Scan the Docker image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'ghcr.io/hansmugel/sdx_uebung:latest'
        format: 'table'

        
  test:
    needs: scan
    name: Start and Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start Application
        run: docker-compose up -d

      - name: Installation of PyPy
        uses: actions/setup-python@v5
        with:
          python-version: 'pypy-3.10'

      - name: Install Dependencies and Run Test Script with Python 3.10
        run: |
          pip install requests
          python testerony.py
        working-directory: ${{ github.workspace }}/SDX_Uebung


